{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nexport let NavComponent = class NavComponent {\n  constructor(toastr, ro, accountService) {\n    this.toastr = toastr;\n    this.ro = ro;\n    this.accountService = accountService;\n    this.model = {};\n    this.currentUser$ = of(null); // isLogin = false\n  }\n\n  getCurrentUser() {\n    this.accountService.currentUser$.subscribe({\n      next: user => console.log(user),\n      error: err => console.log(err)\n    });\n  }\n  ngOnInit() {\n    this.getCurrentUser();\n  }\n  login() {\n    this.accountService.login(this.model).subscribe({\n      next: response => {\n        this.router.navigateByUrl('/members');\n      },\n      error: err => this.toastr.error(err.error) //anything that's not in 200 range of HTTP status\n    });\n  }\n\n  logout() {\n    this.accountService.logout();\n  }\n};\nNavComponent = __decorate([Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})], NavComponent);","map":{"version":3,"names":["Component","of","NavComponent","constructor","toastr","ro","accountService","model","currentUser$","getCurrentUser","subscribe","next","user","console","log","error","err","ngOnInit","login","response","router","navigateByUrl","logout","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\IP\\Xkalux_InternetProgramming\\client\\src\\app\\nav\\nav.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core'\r\nimport { AccountService } from '../_services/account.service'\r\nimport { User } from '../_models/user'\r\nimport { Observable, of } from 'rxjs'\r\nimport { ToastrService } from 'ngx-toastr'\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {}\r\n  currentUser$: Observable<User | null> = of(null) // isLogin = false\r\n\r\n  constructor(private toastr: ToastrService,private ro private accountService: AccountService) { }\r\n  \r\n  getCurrentUser() {\r\n    this.accountService.currentUser$.subscribe({\r\n        next: user => console.log(user), // user?true:false\r\n        error: err => console.log(err)\r\n    })\r\n  }\r\n  ngOnInit(): void {\r\n    this.getCurrentUser()\r\n  }\r\n\r\n  login(): void {\r\n      this.accountService.login(this.model).subscribe({ //Observable\r\n          next: response => {\r\n              this.router.navigateByUrl('/members')\r\n          },\r\n          error: err => this.toastr.error(err.error) //anything that's not in 200 range of HTTP status\r\n      })\r\n  }\r\n  logout() {\r\n    this.accountService.logout()\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAAqBC,EAAE,QAAQ,MAAM;AAQ9B,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAIvBC,YAAoBC,MAAqB,EAASC,EAAE,EAASC,cAA8B;IAAvE,KAAAF,MAAM,GAANA,MAAM;IAAwB,KAAAC,EAAE,GAAFA,EAAE;IAAS,KAAAC,cAAc,GAAdA,cAAc;IAH3E,KAAAC,KAAK,GAAQ,EAAE;IACf,KAAAC,YAAY,GAA4BP,EAAE,CAAC,IAAI,CAAC,EAAC;EAE8C;;EAE/FQ,cAAcA,CAAA;IACZ,IAAI,CAACH,cAAc,CAACE,YAAY,CAACE,SAAS,CAAC;MACvCC,IAAI,EAAEC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAC/BG,KAAK,EAAEC,GAAG,IAAIH,OAAO,CAACC,GAAG,CAACE,GAAG;KAChC,CAAC;EACJ;EACAC,QAAQA,CAAA;IACN,IAAI,CAACR,cAAc,EAAE;EACvB;EAEAS,KAAKA,CAAA;IACD,IAAI,CAACZ,cAAc,CAACY,KAAK,CAAC,IAAI,CAACX,KAAK,CAAC,CAACG,SAAS,CAAC;MAC5CC,IAAI,EAAEQ,QAAQ,IAAG;QACb,IAAI,CAACC,MAAM,CAACC,aAAa,CAAC,UAAU,CAAC;MACzC,CAAC;MACDN,KAAK,EAAEC,GAAG,IAAI,IAAI,CAACZ,MAAM,CAACW,KAAK,CAACC,GAAG,CAACD,KAAK,CAAC,CAAC;KAC9C,CAAC;EACN;;EACAO,MAAMA,CAAA;IACJ,IAAI,CAAChB,cAAc,CAACgB,MAAM,EAAE;EAC9B;CACD;AA3BYpB,YAAY,GAAAqB,UAAA,EALxBvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,SAAS;EACnBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWxB,YAAY,CA2BxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}