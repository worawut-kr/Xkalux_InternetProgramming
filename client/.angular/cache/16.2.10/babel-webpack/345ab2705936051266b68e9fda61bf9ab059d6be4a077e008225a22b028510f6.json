{"ast":null,"code":"import { BehaviorSubject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// ใช้ Injectable decorator เพื่อทำให้ class เป็น Angular service และลงทะเบียนเป็น Singleton ใน root injector\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    // กำหนด baseUrl สำหรับเป็นที่ตั้งของ API ที่ให้บริการ\n    this.baseUrl = 'https://localhost:7777/api/';\n    // กำหนด constructor ที่รับ dependency จาก HttpClient\n    this.currentUserSource = new BehaviorSubject(null);\n    this.currentUser$ = this.currentUserSource.asObservable();\n  }\n  // เมทอด login ใน class AccountService\n  login(model) {\n    // ใช้ HttpClient ในการทำ HTTP POST request ไปยัง API สำหรับการล็อกอิน\n    return this.http.post(`${this.baseUrl}account/login`, model).pipe(map(user => {\n      if (user) {\n        localStorage.setItem('user', JSON.stringify(user));\n        this.currentUserSource.next(user);\n      }\n    }));\n  }\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n  }\n  setCurrentUser(user) {\n    this.currentUserSource.next(user);\n  }\n  static #_ = this.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","map","AccountService","constructor","http","baseUrl","currentUserSource","currentUser$","asObservable","login","model","post","pipe","user","localStorage","setItem","JSON","stringify","next","logout","removeItem","setCurrentUser","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\IP\\Xkalux_InternetProgramming\\client\\src\\app\\_services\\account.service.ts"],"sourcesContent":["// นำเข้า Injectable จาก Angular core\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, map } from 'rxjs';\r\nimport { User } from '../_models/user';\r\n\r\n// ใช้ Injectable decorator เพื่อทำให้ class เป็น Angular service และลงทะเบียนเป็น Singleton ใน root injector\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n    // กำหนด baseUrl สำหรับเป็นที่ตั้งของ API ที่ให้บริการ\r\n    baseUrl = 'https://localhost:7777/api/'\r\n\r\n    // กำหนด constructor ที่รับ dependency จาก HttpClient\r\n    private currentUserSource = new BehaviorSubject<User | null>(null)\r\n    currentUser$ = this.currentUserSource.asObservable()\r\n    \r\n    constructor(private http: HttpClient) { }\r\n    \r\n    // เมทอด login ใน class AccountService\r\n    login(model: any) {\r\n        // ใช้ HttpClient ในการทำ HTTP POST request ไปยัง API สำหรับการล็อกอิน\r\n        return this.http.post<User>(`${this.baseUrl}account/login`, model).pipe(\r\n            map((user: User) => {\r\n                if (user) {\r\n                    localStorage.setItem('user', JSON.stringify(user))\r\n                    this.currentUserSource.next(user)\r\n                }\r\n            })\r\n        )\r\n    }\r\n    logout() {\r\n        localStorage.removeItem('user')\r\n        this.currentUserSource.next(null)\r\n    }\r\n    setCurrentUser(user: User) {\r\n        this.currentUserSource.next(user)\r\n    }\r\n\r\n}\r\n"],"mappings":"AAGA,SAASA,eAAe,EAAEC,GAAG,QAAQ,MAAM;;;AAG3C;AAIA,OAAM,MAAOC,cAAc;EAQvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAPxB;IACA,KAAAC,OAAO,GAAG,6BAA6B;IAEvC;IACQ,KAAAC,iBAAiB,GAAG,IAAIN,eAAe,CAAc,IAAI,CAAC;IAClE,KAAAO,YAAY,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;EAEZ;EAExC;EACAC,KAAKA,CAACC,KAAU;IACZ;IACA,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAO,GAAG,IAAI,CAACN,OAAO,eAAe,EAAEK,KAAK,CAAC,CAACE,IAAI,CACnEX,GAAG,CAAEY,IAAU,IAAI;MACf,IAAIA,IAAI,EAAE;QACNC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;QAClD,IAAI,CAACP,iBAAiB,CAACY,IAAI,CAACL,IAAI,CAAC;;IAEzC,CAAC,CAAC,CACL;EACL;EACAM,MAAMA,CAAA;IACFL,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACd,iBAAiB,CAACY,IAAI,CAAC,IAAI,CAAC;EACrC;EACAG,cAAcA,CAACR,IAAU;IACrB,IAAI,CAACP,iBAAiB,CAACY,IAAI,CAACL,IAAI,CAAC;EACrC;EAAC,QAAAS,CAAA,G;qBA5BQpB,cAAc,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdzB,cAAc;IAAA0B,OAAA,EAAd1B,cAAc,CAAA2B,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}