{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// ใช้ Injectable decorator เพื่อทำให้ class เป็น Angular service และลงทะเบียนเป็น Singleton ใน root injector\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    // กำหนด baseUrl สำหรับเป็นที่ตั้งของ API ที่ให้บริการ\n    this.baseUrl = 'https://localhost:7777/api/';\n    // กำหนด constructor ที่รับ dependency จาก HttpClient\n    this.currentUserSource = new BehaviorSubject(null);\n    this.currentUser$ = this.currentUserSource.asObservable();\n  }\n  // เมทอด login ใน class AccountService\n  login(model) {\n    // ใช้ HttpClient ในการทำ HTTP POST request ไปยัง API สำหรับการล็อกอิน\n    return this.http.post(`${this.baseUrl}account/login`, model);\n  }\n  static #_ = this.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AccountService","constructor","http","baseUrl","currentUserSource","BehaviorSubject","currentUser$","asObservable","login","model","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\IP\\Xkalux_InternetProgramming\\client\\src\\app\\_services\\account.service.ts"],"sourcesContent":["// นำเข้า Injectable จาก Angular core\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n// ใช้ Injectable decorator เพื่อทำให้ class เป็น Angular service และลงทะเบียนเป็น Singleton ใน root injector\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n    // กำหนด baseUrl สำหรับเป็นที่ตั้งของ API ที่ให้บริการ\r\n    baseUrl = 'https://localhost:7777/api/'\r\n\r\n    // กำหนด constructor ที่รับ dependency จาก HttpClient\r\n    private currentUserSource = new BehaviorSubject<User | null>(null)\r\n    currentUser$ = this.currentUserSource.asObservable()\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // เมทอด login ใน class AccountService\r\n    login(model: any) {\r\n        // ใช้ HttpClient ในการทำ HTTP POST request ไปยัง API สำหรับการล็อกอิน\r\n        return this.http.post(`${this.baseUrl}account/login`, model)\r\n    }\r\n}\r\n"],"mappings":";;AAIA;AAIA,OAAM,MAAOA,cAAc;EAOvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANxB;IACA,KAAAC,OAAO,GAAG,6BAA6B;IAEvC;IACQ,KAAAC,iBAAiB,GAAG,IAAIC,eAAe,CAAc,IAAI,CAAC;IAClE,KAAAC,YAAY,GAAG,IAAI,CAACF,iBAAiB,CAACG,YAAY,EAAE;EACZ;EAExC;EACAC,KAAKA,CAACC,KAAU;IACZ;IACA,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,OAAO,eAAe,EAAEM,KAAK,CAAC;EAChE;EAAC,QAAAE,CAAA,G;qBAbQX,cAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdhB,cAAc;IAAAiB,OAAA,EAAdjB,cAAc,CAAAkB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}