{"ast":null,"code":"import { BehaviorSubject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// ใช้ Injectable decorator เพื่อทำให้ class เป็น Angular service และลงทะเบียนเป็น Singleton ใน root injector\nexport let AccountService = /*#__PURE__*/(() => {\n  class AccountService {\n    constructor(http) {\n      this.http = http;\n      // กำหนด baseUrl สำหรับเป็นที่ตั้งของ API ที่ให้บริการ\n      this.baseUrl = 'https://localhost:7777/api/';\n      // กำหนด constructor ที่รับ dependency จาก HttpClient\n      this.currentUserSource = new BehaviorSubject(null);\n      this.currentUser$ = this.currentUserSource.asObservable();\n    }\n    register(model) {\n      return this.http.post(`${this.baseUrl}account/register`, model).pipe(map(user => {\n        if (user) {\n          localStorage.setItem('user', JSON.stringify(user));\n          this.currentUserSource.next(user);\n        }\n      }));\n    }\n    // เมทอด login ใน class AccountService\n    login(model) {\n      // ใช้ HttpClient ในการทำ HTTP POST request ไปยัง API สำหรับการล็อกอิน\n      return this.http.post(`${this.baseUrl}account/login`, model).pipe(map(user => {\n        if (user) {\n          localStorage.setItem('user', JSON.stringify(user));\n          this.currentUserSource.next(user);\n        }\n      }));\n    }\n    logout() {\n      localStorage.removeItem('user');\n      this.currentUserSource.next(null);\n    }\n    setCurrentUser(user) {\n      this.currentUserSource.next(user);\n    }\n    static #_ = this.ɵfac = function AccountService_Factory(t) {\n      return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AccountService,\n      factory: AccountService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AccountService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}